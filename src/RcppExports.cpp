// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// marshall_subset
Rcpp::List marshall_subset(const std::vector<std::vector<double> >& Y, const unsigned int& s, const unsigned int& e, const std::vector<double>& betas, const std::vector<double>& alphas);
RcppExport SEXP _subset_marshall_subset(SEXP YSEXP, SEXP sSEXP, SEXP eSEXP, SEXP betasSEXP, SEXP alphasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<std::vector<double> >& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type s(sSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type e(eSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type alphas(alphasSEXP);
    rcpp_result_gen = Rcpp::wrap(marshall_subset(Y, s, e, betas, alphas));
    return rcpp_result_gen;
END_RCPP
}
// marshall_wbs_subset
Rcpp::List marshall_wbs_subset(const std::vector<std::vector<double> >& data, const unsigned int& M, const double& zeta, const std::vector<double>& betas, const std::vector<double>& alphas, const unsigned int& seed);
RcppExport SEXP _subset_marshall_wbs_subset(SEXP dataSEXP, SEXP MSEXP, SEXP zetaSEXP, SEXP betasSEXP, SEXP alphasSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<std::vector<double> >& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const double& >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(marshall_wbs_subset(data, M, zeta, betas, alphas, seed));
    return rcpp_result_gen;
END_RCPP
}
// marshall_wbs
std::list<unsigned int> marshall_wbs(const std::vector<double>& data, const unsigned int& M, const double& zeta, const unsigned int& seed);
RcppExport SEXP _subset_marshall_wbs(SEXP dataSEXP, SEXP MSEXP, SEXP zetaSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const double& >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< const unsigned int& >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(marshall_wbs(data, M, zeta, seed));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_subset_marshall_subset", (DL_FUNC) &_subset_marshall_subset, 5},
    {"_subset_marshall_wbs_subset", (DL_FUNC) &_subset_marshall_wbs_subset, 6},
    {"_subset_marshall_wbs", (DL_FUNC) &_subset_marshall_wbs, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_subset(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
